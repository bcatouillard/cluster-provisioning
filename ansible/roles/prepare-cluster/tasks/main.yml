---
- name: Disable SWAP in fstab
  replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
    replace: '# \1'

- name: Update repositories cache & Install ca-certificates, curl, apt-transport-https, gpg
  become: true
  ansible.builtin.apt:
    update_cache: true
    pkg:
      - ca-certificates
      - curl
      - apt-transport-https
      - gpg

- name: Create keyring folder
  become: true
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: "0755"

- name: Add Docker's official GPG key
  become: true
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/keyrings/docker.asc
    mode: "0755"
    force: true

- name: Add Docker repository
  become: true
  ansible.builtin.apt_repository:
    repo:
      "deb [signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \
      {{ ansible_distribution_release }} stable"
    state: present
    filename: docker

- name: Update repositories cache
  become: true
  ansible.builtin.apt:
    update_cache: true

- name: Install containerd.io
  become: true
  ansible.builtin.apt:
    name: containerd.io

- name: Use systemd cgroup
  become: true
  ansible.builtin.copy:
    content: |
      [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
        [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
          SystemdCgroup = true
    dest: /etc/containerd/config.toml
    mode: "644"

- name: Add mobprobe overlay and br_netfilter
  become: true
  ansible.builtin.copy:
    content: |
      overlay
      br_netfilter
    dest: /etc/modules-load.d/k8s.conf
    mode: "644"

- name: Configure module overlay for containerd
  become: true
  ansible.builtin.command: modprobe overlay
  changed_when: true

- name: Configure module br_netfilter for containerd
  become: true
  ansible.builtin.command: modprobe br_netfilter
  changed_when: true

- name: Allow forwarding
  become: true
  ansible.builtin.copy:
    content: |
      net.bridge.bridge-nf-call-iptables  = 1
      net.bridge.bridge-nf-call-ip6tables = 1
      net.ipv4.ip_forward                 = 1
    dest: /etc/sysctl.d/k8s.conf
    mode: "644"

- name: Apply system parameters
  become: true
  ansible.builtin.command: sysctl --system
  changed_when: true

- name: Restart Containerd service
  become: true
  ansible.builtin.service:
    name: containerd
    state: restarted

- name: Add Kubernetes' official GPG key
  become: true
  ansible.builtin.get_url:
    url: https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key
    dest: /etc/apt/keyrings/kubernetes.asc
    mode: "0755"
    force: true

- name: Add K8s repository
  become: true
  ansible.builtin.apt_repository:
    repo: "deb [signed-by=/etc/apt/keyrings/kubernetes.asc] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /"
    state: present
    filename: kubernetes

- name: Update repositories cache
  become: true
  ansible.builtin.apt:
    update_cache: true

- name: Install kubelet, kubeadm
  become: true
  ansible.builtin.apt:
    pkg:
      - kubeadm
      - kubelet

- name: Enable service kubelet
  become: true
  ansible.builtin.service:
    name: kubelet
    enabled: true
